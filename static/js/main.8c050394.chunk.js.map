{"version":3,"sources":["components/TodoList/TodoList.tsx","components/CurrentUser/CurrentUser.tsx","api.ts","App.tsx","index.tsx"],"names":["TodoList","todos","selectUser","selectedUserId","useState","curentDisplay","setCurrentDisplay","query","setQuery","displayedTodos","filtredTodo","filter","todo","title","toLowerCase","includes","completed","filteredTodos","className","htmlFor","id","value","onChange","event","target","map","format","type","search","classNames","TodoList__item","readOnly","checked","button","userId","onClick","CurrentUser","users","selectedUser","find","user","name","email","phone","BASE_API_URL","App","setSelectedUserId","setTodos","setUsers","useEffect","fetch","then","response","json","todosFromServer","usersFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8c050394.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { TodoProps } from '../../types/types';\nimport './TodoList.scss';\n\nexport const TodoList: React.FC<TodoProps> = ({ todos, selectUser, selectedUserId }) => {\n  const displayFormat = ['all', 'active', 'completed'];\n  const [curentDisplay, setCurrentDisplay] = useState('all');\n  const [query, setQuery] = useState('');\n\n  const search = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const filteredTodos = (() => {\n    const filtredTodo = todos.filter(todo => (\n      todo.title.toLowerCase().includes(query.toLowerCase())\n    ));\n\n    switch (curentDisplay) {\n      case 'active':\n        return filtredTodo.filter(todo => !todo.completed);\n\n      case 'completed':\n        return filtredTodo.filter(todo => todo.completed);\n\n      default:\n        return filtredTodo;\n    }\n  });\n\n  const displayedTodos = filteredTodos();\n\n  return (\n    <div className=\"TodoList\">\n      <h2>Todos:</h2>\n      <div className=\"TodoList__list-container\">\n        <ul className=\"TodoList__list\">\n          <label htmlFor=\"select\">\n            <select\n              id=\"select\"\n              value={curentDisplay}\n              onChange={(event) => {\n                setCurrentDisplay(event.target.value);\n              }}\n            >\n              {displayFormat.map(format => (\n                <option\n                  key={format}\n                  value={format}\n                >\n                  {format}\n                </option>\n              ))}\n            </select>\n          </label>\n          <input\n            type=\"text\"\n            onChange={(event) => {\n              search(event);\n            }}\n          />\n          {displayedTodos.map(todo => (\n            <li\n              className={classNames({\n                TodoList__item: true,\n                'TodoList__item--checked': todo.completed,\n                'TodoList__item--unchecked': !todo.completed,\n              })}\n              key={todo.id}\n            >\n              <input\n                type=\"checkbox\"\n                readOnly\n                checked={todo.completed}\n              />\n\n              <p>{todo.title}</p>\n              <button\n                className={classNames({\n                  'TodoList__user-button': true,\n                  button: true,\n                  'TodoList__user-button--selected': todo.userId === selectedUserId,\n                })}\n                type=\"button\"\n                onClick={() => {\n                  selectUser(todo.userId);\n                }}\n              >\n                User #\n                {' '}\n                {todo.userId}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { CurrentUserProps } from '../../types/types';\nimport './CurrentUser.scss';\n\nexport const CurrentUser: React.FC<CurrentUserProps> = ({ users, selectedUserId }) => {\n  const selectedUser = users.find(user => user.id === selectedUserId);\n\n  return selectedUser ? (\n    <div className=\"CurrentUser\">\n      <h2 className=\"CurrentUser__title\">\n        <span>\n          Selected user:\n          {selectedUser.id}\n        </span>\n      </h2>\n\n      <h3 className=\"CurrentUser__name\">{selectedUser.name}</h3>\n      <p className=\"CurrentUser__email\">{selectedUser.email}</p>\n      <p className=\"CurrentUser__phone\">{selectedUser.phone}</p>\n    </div>\n  ) : (\n    null\n  );\n};\n","const BASE_API_URL = 'https://mate.academy/students-api/';\n\nexport const getAllTodos = () => {\n  return fetch(`${BASE_API_URL}todos`)\n    .then(response => response.json());\n};\n\nexport const getAllUsers = () => {\n  return fetch(`${BASE_API_URL}users`)\n    .then(response => response.json());\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getAllTodos, getAllUsers } from './api';\n\nconst App: React.FC = () => {\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [todos, setTodos] = useState([]);\n  const [users, setUsers] = useState([]);\n\n  const displayUser = (userId: number) => {\n    setSelectedUserId(userId);\n  };\n\n  useEffect(() => {\n    getAllTodos()\n      .then(todosFromServer => {\n        setTodos(todosFromServer);\n      });\n  }, []);\n\n  useEffect(() => {\n    getAllUsers()\n      .then(usersFromServer => {\n        setUsers(usersFromServer);\n      });\n  }, [selectedUserId]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__sidebar\">\n        <TodoList\n          todos={todos}\n          selectUser={displayUser}\n          selectedUserId={selectedUserId}\n        />\n      </div>\n\n      <div className=\"App__content\">\n        <div className=\"App__content-container\">\n          {selectedUserId ? (\n            <>\n              <CurrentUser\n                users={users}\n                selectedUserId={selectedUserId}\n              />\n              <button\n                type=\"button\"\n                className=\"button\"\n                onClick={() => {\n                  setSelectedUserId(0);\n                }}\n              >\n                Clear\n              </button>\n            </>\n\n          ) : 'No user selected'}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}